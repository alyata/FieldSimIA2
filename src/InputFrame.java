
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alex
 */
public class InputFrame extends javax.swing.JFrame {
    private MainFrame simulationFrame;
    private static final int PREFERRED_HEIGHT = 800;
    private static final int PREFERRED_WIDTH = 1200;
    
    
    
    /**
     * Creates new form inputFrame
     */
    public InputFrame() {
        initComponents();
        //do some initialization and packing
        this.simulationChooserDialog.pack();
        this.simulationNameChooserDialog.pack();
        this.particle1ChooserDialog.pack();
        this.particle2ChooserDialog.pack();
        this.particle1NameChooserDialog.pack();
        this.particle2NameChooserDialog.pack();
        this.setVisible(true);
        //sets the playbutton to intialize as unselected
        playButton.setSelected(false);
        //Initialize the simulation frame object
        simulationFrame = new MainFrame(PREFERRED_WIDTH, PREFERRED_HEIGHT);
        
        //creates a new simulationFrame.sim.getSimulation() based on the template simulation in the MainFrame
        //this is used as a buffer where the user can make changes without affecting the simulation being played
        //to load the simulation into the MainFrame, use the update simulation button
        simulationFrame.sim.setSimulation(new Simulation(
                "simulation",
                PREFERRED_WIDTH,
                PREFERRED_HEIGHT)
        );
        //generates the first particle based on default field content
        simulationFrame.sim.getSimulation().addParticle(new Particle(
                nameField1.getText(),
                Double.parseDouble(radiusField1.getText()), 
                Double.parseDouble(chargeField1.getText()),
                Double.parseDouble(massField1.getText()),
                new Point(
                    Double.parseDouble(coordinateField1x.getText()),
                    Double.parseDouble(coordinateField1y.getText())
                )
            )
        );
        //generates the second particle based on default field content
        simulationFrame.sim.getSimulation().addParticle(new Particle(
                nameField2.getText(),
                Double.parseDouble(radiusField2.getText()), 
                Double.parseDouble(chargeField2.getText()),
                Double.parseDouble(massField2.getText()),
                new Point(
                    Double.parseDouble(coordinateField2x.getText()),
                    Double.parseDouble(coordinateField2y.getText())
                )
            )
        );
        
        simulationFrame.setVisible(true);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        simulationChooserDialog = new javax.swing.JDialog();
        simulationChooser = new javax.swing.JFileChooser();
        simulationNameChooserDialog = new javax.swing.JDialog();
        simulationNameField = new javax.swing.JTextField();
        simulationNameLabel = new javax.swing.JLabel();
        particle1ChooserDialog = new javax.swing.JDialog();
        particle1Chooser = new javax.swing.JFileChooser();
        particle2ChooserDialog = new javax.swing.JDialog();
        particle2Chooser = new javax.swing.JFileChooser();
        particle1NameChooserDialog = new javax.swing.JDialog();
        particle1NameField = new javax.swing.JTextField();
        particle1NameLabel = new javax.swing.JLabel();
        particle2NameChooserDialog = new javax.swing.JDialog();
        particle2NameField = new javax.swing.JTextField();
        particle2NameLabel = new javax.swing.JLabel();
        coordinateField1x = new javax.swing.JTextField();
        coordinateField1y = new javax.swing.JTextField();
        xLabel1 = new javax.swing.JLabel();
        yLabel1 = new javax.swing.JLabel();
        chargeField1 = new javax.swing.JTextField();
        massField1 = new javax.swing.JTextField();
        massLabel1 = new javax.swing.JLabel();
        chargeLabel1 = new javax.swing.JLabel();
        nameField1 = new javax.swing.JTextField();
        radiusField1 = new javax.swing.JTextField();
        nameLabel1 = new javax.swing.JLabel();
        radiusLabel1 = new javax.swing.JLabel();
        saveButton1 = new javax.swing.JButton();
        loadButton1 = new javax.swing.JButton();
        playButton = new javax.swing.JToggleButton();
        saveSimulationButton = new javax.swing.JButton();
        loadSimulationButton = new javax.swing.JButton();
        xLabel2 = new javax.swing.JLabel();
        loadButton2 = new javax.swing.JButton();
        yLabel2 = new javax.swing.JLabel();
        chargeField2 = new javax.swing.JTextField();
        massField2 = new javax.swing.JTextField();
        massLabel2 = new javax.swing.JLabel();
        chargeLabel2 = new javax.swing.JLabel();
        nameField2 = new javax.swing.JTextField();
        radiusField2 = new javax.swing.JTextField();
        nameLabel2 = new javax.swing.JLabel();
        coordinateField2x = new javax.swing.JTextField();
        radiusLabel2 = new javax.swing.JLabel();
        coordinateField2y = new javax.swing.JTextField();
        saveButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        runTimeField = new javax.swing.JTextField();
        runTImeLabel = new javax.swing.JLabel();
        conserveCheckBox = new javax.swing.JCheckBox();

        simulationChooser.setApproveButtonText("Open");
        simulationChooser.setApproveButtonToolTipText("");
        simulationChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulationChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout simulationChooserDialogLayout = new javax.swing.GroupLayout(simulationChooserDialog.getContentPane());
        simulationChooserDialog.getContentPane().setLayout(simulationChooserDialogLayout);
        simulationChooserDialogLayout.setHorizontalGroup(
            simulationChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
            .addGroup(simulationChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(simulationChooserDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(simulationChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        simulationChooserDialogLayout.setVerticalGroup(
            simulationChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 326, Short.MAX_VALUE)
            .addGroup(simulationChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(simulationChooserDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(simulationChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        simulationNameField.setText("name...");
        simulationNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulationNameFieldActionPerformed(evt);
            }
        });

        simulationNameLabel.setText("file name:");

        javax.swing.GroupLayout simulationNameChooserDialogLayout = new javax.swing.GroupLayout(simulationNameChooserDialog.getContentPane());
        simulationNameChooserDialog.getContentPane().setLayout(simulationNameChooserDialogLayout);
        simulationNameChooserDialogLayout.setHorizontalGroup(
            simulationNameChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, simulationNameChooserDialogLayout.createSequentialGroup()
                .addComponent(simulationNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(simulationNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
        );
        simulationNameChooserDialogLayout.setVerticalGroup(
            simulationNameChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, simulationNameChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(simulationNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(simulationNameLabel))
        );

        particle1Chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                particle1ChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout particle1ChooserDialogLayout = new javax.swing.GroupLayout(particle1ChooserDialog.getContentPane());
        particle1ChooserDialog.getContentPane().setLayout(particle1ChooserDialogLayout);
        particle1ChooserDialogLayout.setHorizontalGroup(
            particle1ChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
            .addGroup(particle1ChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(particle1ChooserDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(particle1Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        particle1ChooserDialogLayout.setVerticalGroup(
            particle1ChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 326, Short.MAX_VALUE)
            .addGroup(particle1ChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(particle1ChooserDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(particle1Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        particle2Chooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                particle2ChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout particle2ChooserDialogLayout = new javax.swing.GroupLayout(particle2ChooserDialog.getContentPane());
        particle2ChooserDialog.getContentPane().setLayout(particle2ChooserDialogLayout);
        particle2ChooserDialogLayout.setHorizontalGroup(
            particle2ChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 506, Short.MAX_VALUE)
            .addGroup(particle2ChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(particle2ChooserDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(particle2Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        particle2ChooserDialogLayout.setVerticalGroup(
            particle2ChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 326, Short.MAX_VALUE)
            .addGroup(particle2ChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(particle2ChooserDialogLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(particle2Chooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        particle1NameField.setText("name...");
        particle1NameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                particle1NameFieldActionPerformed(evt);
            }
        });

        particle1NameLabel.setText("file name:");

        javax.swing.GroupLayout particle1NameChooserDialogLayout = new javax.swing.GroupLayout(particle1NameChooserDialog.getContentPane());
        particle1NameChooserDialog.getContentPane().setLayout(particle1NameChooserDialogLayout);
        particle1NameChooserDialogLayout.setHorizontalGroup(
            particle1NameChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, particle1NameChooserDialogLayout.createSequentialGroup()
                .addComponent(particle1NameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(particle1NameField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
        );
        particle1NameChooserDialogLayout.setVerticalGroup(
            particle1NameChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, particle1NameChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(particle1NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(particle1NameLabel))
        );

        particle2NameField.setText("name...");
        particle2NameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                particle2NameFieldActionPerformed(evt);
            }
        });

        particle2NameLabel.setText("file name:");

        javax.swing.GroupLayout particle2NameChooserDialogLayout = new javax.swing.GroupLayout(particle2NameChooserDialog.getContentPane());
        particle2NameChooserDialog.getContentPane().setLayout(particle2NameChooserDialogLayout);
        particle2NameChooserDialogLayout.setHorizontalGroup(
            particle2NameChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, particle2NameChooserDialogLayout.createSequentialGroup()
                .addComponent(particle2NameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(particle2NameField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
        );
        particle2NameChooserDialogLayout.setVerticalGroup(
            particle2NameChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, particle2NameChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(particle2NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(particle2NameLabel))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controls");

        coordinateField1x.setText("300");
        coordinateField1x.setToolTipText("unit in meters");
        coordinateField1x.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                coordinateField1xFocusLost(evt);
            }
        });
        coordinateField1x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coordinateField1xActionPerformed(evt);
            }
        });

        coordinateField1y.setText("400");
        coordinateField1y.setToolTipText("unit in meters");
        coordinateField1y.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                coordinateField1yFocusLost(evt);
            }
        });
        coordinateField1y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coordinateField1yActionPerformed(evt);
            }
        });

        xLabel1.setText("x:");
        xLabel1.setToolTipText("x-coordinate of red particle");

        yLabel1.setText("y:");
        yLabel1.setToolTipText("y-coordinate of red particle");

        chargeField1.setText("-1.0E-3");
        chargeField1.setToolTipText("unit in coulombs");
        chargeField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                chargeField1FocusLost(evt);
            }
        });
        chargeField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeField1ActionPerformed(evt);
            }
        });

        massField1.setText("200.0");
        massField1.setToolTipText("unit in kg");
        massField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                massField1FocusLost(evt);
            }
        });
        massField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                massField1ActionPerformed(evt);
            }
        });

        massLabel1.setText("mass:");
        massLabel1.setToolTipText("mass of red particle");

        chargeLabel1.setText("charge:");
        chargeLabel1.setToolTipText("electrical charge of red particle");

        nameField1.setText("red");
        nameField1.setToolTipText("name of red particle");
        nameField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameField1FocusLost(evt);
            }
        });
        nameField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameField1ActionPerformed(evt);
            }
        });

        radiusField1.setText("20.0");
        radiusField1.setToolTipText("unit in meters");
        radiusField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                radiusField1FocusLost(evt);
            }
        });
        radiusField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiusField1ActionPerformed(evt);
            }
        });

        nameLabel1.setText("name:");
        nameLabel1.setToolTipText("name of red particle");

        radiusLabel1.setText("radius:");
        radiusLabel1.setToolTipText("radius of red particle");

        saveButton1.setText("Save...");
        saveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton1ActionPerformed(evt);
            }
        });

        loadButton1.setText("Load...");
        loadButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButton1ActionPerformed(evt);
            }
        });

        playButton.setText("Play!");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });

        saveSimulationButton.setText("Save Simulation");
        saveSimulationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSimulationButtonActionPerformed(evt);
            }
        });

        loadSimulationButton.setText("Load Simulation");
        loadSimulationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadSimulationButtonActionPerformed(evt);
            }
        });

        xLabel2.setText("x:");
        xLabel2.setToolTipText("x-coordinate of blue particle");

        loadButton2.setText("Load...");
        loadButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButton2ActionPerformed(evt);
            }
        });

        yLabel2.setText("y:");
        yLabel2.setToolTipText("y-coordinate of blue particle");

        chargeField2.setText("1.0E-3");
        chargeField2.setToolTipText("unit in coulombs");
        chargeField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                chargeField2FocusLost(evt);
            }
        });
        chargeField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargeField2ActionPerformed(evt);
            }
        });

        massField2.setText("200.0");
        massField2.setToolTipText("unit in kg");
        massField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                massField2FocusLost(evt);
            }
        });
        massField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                massField2ActionPerformed(evt);
            }
        });

        massLabel2.setText("mass:");
        massLabel2.setToolTipText("mass of blue particle");

        chargeLabel2.setText("charge:");
        chargeLabel2.setToolTipText("electrical charge of blue particle");

        nameField2.setText("blue");
        nameField2.setToolTipText("name of blue particle");
        nameField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameField2FocusLost(evt);
            }
        });
        nameField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameField2ActionPerformed(evt);
            }
        });

        radiusField2.setText("20.0");
        radiusField2.setToolTipText("unit in meters");
        radiusField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                radiusField2FocusLost(evt);
            }
        });
        radiusField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radiusField2ActionPerformed(evt);
            }
        });

        nameLabel2.setText("name:");
        nameLabel2.setToolTipText("name of blue particle");

        coordinateField2x.setText("420");
        coordinateField2x.setToolTipText("unit in meters");
        coordinateField2x.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                coordinateField2xFocusLost(evt);
            }
        });
        coordinateField2x.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coordinateField2xActionPerformed(evt);
            }
        });

        radiusLabel2.setText("radius:");
        radiusLabel2.setToolTipText("radius of blue particle");

        coordinateField2y.setText("500");
        coordinateField2y.setToolTipText("unit in meters");
        coordinateField2y.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                coordinateField2yFocusLost(evt);
            }
        });
        coordinateField2y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coordinateField2yActionPerformed(evt);
            }
        });

        saveButton2.setText("Save...");
        saveButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("READ ME!\nWelcome to the electric field simulation! Change the particle variables above however you want. If you input text into the numerical fields, no changes will be saved. Once you're done, press 'play' to see it in action.  If you have a big acceleration or velocity please be aware your particle may fly away. Variable details are explained in tooltips. To load or save individual particles, use their respective load or save buttons. To save the simulation, use the load or save button below. Note that saved files are stored in the same directory as this program. \nYou may edit this text box to take notes.\n\nTo prevent crashes, it is recommended that the ratio of charges between particles not exceed double(2).\n\nSimulation details:\nWidth = 1200 meters\nHeight = 800 meters\n(Each meter corrspeonds to a pixel)\nCoulomb's constant = 8.98755E+9 N m^2 C^-2");
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        runTimeField.setText("1000");
        runTimeField.setToolTipText("time in millisecond");

        runTImeLabel.setText("running time:");
        runTImeLabel.setToolTipText("How long the simulation should run");

        conserveCheckBox.setText("Conserve Motion");
        conserveCheckBox.setToolTipText("Select to conserve the acceleration and velocity from the previous simulation.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(loadSimulationButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveSimulationButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(conserveCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(runTImeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(runTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(nameLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameField1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chargeLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chargeField1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(loadButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radiusLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radiusField1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(massLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(massField1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(xLabel1)
                            .addComponent(yLabel1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(coordinateField1x, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                            .addComponent(coordinateField1y))
                        .addContainerGap())
                    .addComponent(playButton, javax.swing.GroupLayout.Alignment.TRAILING)))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(nameLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameField2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(loadButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(saveButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radiusLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radiusField2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(massLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(massField2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(chargeLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chargeField2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(xLabel2)
                            .addComponent(yLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(coordinateField2x, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                            .addComponent(coordinateField2y, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordinateField1x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xLabel1)
                    .addComponent(chargeField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chargeLabel1)
                    .addComponent(nameField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordinateField1y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yLabel1)
                    .addComponent(massField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(massLabel1)
                    .addComponent(radiusField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radiusLabel1)
                    .addComponent(saveButton1)
                    .addComponent(loadButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordinateField2x, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xLabel2)
                    .addComponent(chargeField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chargeLabel2)
                    .addComponent(nameField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coordinateField2y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yLabel2)
                    .addComponent(massField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(massLabel2)
                    .addComponent(radiusField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radiusLabel2)
                    .addComponent(saveButton2)
                    .addComponent(loadButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playButton)
                    .addComponent(saveSimulationButton)
                    .addComponent(loadSimulationButton)
                    .addComponent(runTimeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(runTImeLabel)
                    .addComponent(conserveCheckBox)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void coordinateField2xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coordinateField2xActionPerformed
       
        try{
            simulationFrame.sim.getSimulation().getParticles()[1].getPosition().setX(Double.parseDouble(coordinateField2x.getText()));
            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        } catch (Exception e)
        {
            
        }
    }//GEN-LAST:event_coordinateField2xActionPerformed

    private void radiusField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiusField2ActionPerformed
       
        simulationFrame.sim.getSimulation().getParticles()[1].setRadius(Double.parseDouble(radiusField2.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        
    }//GEN-LAST:event_radiusField2ActionPerformed

    private void nameField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameField2ActionPerformed
       
        simulationFrame.sim.getSimulation().getParticles()[1].setName(nameField2.getText());
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_nameField2ActionPerformed

    private void massField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_massField2ActionPerformed
       
        simulationFrame.sim.getSimulation().getParticles()[1].setMass(Double.parseDouble(massField2.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_massField2ActionPerformed

    private void chargeField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeField2ActionPerformed
       
        simulationFrame.sim.getSimulation().getParticles()[1].setCharge(Double.parseDouble(chargeField2.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_chargeField2ActionPerformed

    private void loadSimulationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadSimulationButtonActionPerformed
        //show the file chooser, loading is handled by the chooser
        this.simulationChooserDialog.setVisible(true);
    }//GEN-LAST:event_loadSimulationButtonActionPerformed

    private void saveSimulationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSimulationButtonActionPerformed
        //similar logic as file chooser, but this is only for deciding the name of the file(without extensions)
        simulationNameChooserDialog.setVisible(true);
    }//GEN-LAST:event_saveSimulationButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        //TODO connect to the simulationFrame itself to control pause play
            loadSimulationButton.setEnabled(false);
            saveSimulationButton.setEnabled(false);
            this.simulationFrame.setVisible(true);
            //reset the velocity and acceleration
            if(!conserveCheckBox.isSelected())
            {
                this.simulationFrame.sim.getSimulation().getParticles()[0].setAcceleration(new Vector(new Point(0,0), new Point(0,0)));
                this.simulationFrame.sim.getSimulation().getParticles()[1].setAcceleration(new Vector(new Point(0,0), new Point(0,0)));
                this.simulationFrame.sim.getSimulation().getParticles()[0].setVelocity(new Vector(new Point(0,0), new Point(0,0)));
                this.simulationFrame.sim.getSimulation().getParticles()[1].setVelocity(new Vector(new Point(0,0), new Point(0,0)));
            }
            
            long startTime = System.currentTimeMillis();
            while(true) //the render terminates after the specified ms in the runTimeField
            {
                simulationFrame.advanceFrame();
                if(System.currentTimeMillis() - startTime >= Long.parseLong(this.runTimeField.getText()))
                {
                    break;
                }
                
                
            }
            this.simulationFrame.sim.getSimulation().getFieldLines().clear();
                simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
            //update the fields to correctly reflect the coordinates of the particles
            this.coordinateField1x.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getPosition().getX()));
            this.coordinateField1y.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getPosition().getY()));
            
            this.coordinateField2x.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getPosition().getX()));
            this.coordinateField2y.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getPosition().getY()));
            
            
            loadSimulationButton.setEnabled(true);
            saveSimulationButton.setEnabled(true);
            playButton.setSelected(false);
    }//GEN-LAST:event_playButtonActionPerformed

    private void radiusField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radiusField1ActionPerformed
        simulationFrame.sim.getSimulation().getParticles()[0].setRadius(Double.parseDouble(radiusField1.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_radiusField1ActionPerformed

    private void nameField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameField1ActionPerformed
        simulationFrame.sim.getSimulation().getParticles()[0].setName(nameField1.getText());
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_nameField1ActionPerformed

    private void massField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_massField1ActionPerformed
        simulationFrame.sim.getSimulation().getParticles()[0].setMass(Double.parseDouble(massField1.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_massField1ActionPerformed

    private void chargeField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargeField1ActionPerformed
        simulationFrame.sim.getSimulation().getParticles()[0].setCharge(Double.parseDouble(chargeField1.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_chargeField1ActionPerformed

    private void coordinateField1xActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coordinateField1xActionPerformed
        try {
        simulationFrame.sim.getSimulation().getParticles()[0].getPosition().setX(Double.parseDouble(coordinateField1x.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        } catch (Exception e)
        {
            
        }
    }//GEN-LAST:event_coordinateField1xActionPerformed

    private void simulationChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulationChooserActionPerformed
        //handles the selection of a new simulation file, and loads to the simulationFrame
        //assigns the file to a temporary selectedFile field
        File selectedFile = simulationChooser.getSelectedFile();
        simulationChooserDialog.setVisible(false);
        //reads the object from the file into the MainFrame simulation
        //error handlers break from the code if an error is caught
        try {
            FileInputStream fInput = new FileInputStream(selectedFile);
            ObjectInputStream oInput = new ObjectInputStream(fInput);
            simulationFrame.sim.setSimulation((Simulation)oInput.readObject());
            //update the fields
            this.chargeField1.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getCharge()));
            this.massField1.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getMass()));
            this.nameField1.setText(simulationFrame.sim.getSimulation().getParticles()[0].getName());
            this.radiusField1.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getRadius()));
            this.coordinateField1x.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getPosition().getX()));
            this.coordinateField1y.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getPosition().getY()));
            
            this.chargeField2.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getCharge()));
            this.massField2.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getMass()));
            this.nameField2.setText(simulationFrame.sim.getSimulation().getParticles()[1].getName());
            this.radiusField2.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getRadius()));
            this.coordinateField2x.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getPosition().getX()));
            this.coordinateField2y.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getPosition().getY()));
            
            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
            
        } catch (ClassNotFoundException ex) {
            
        }
    }//GEN-LAST:event_simulationChooserActionPerformed

    private void simulationNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulationNameFieldActionPerformed
        try {
            FileOutputStream fOutput = new FileOutputStream(simulationNameField.getText() + ".sim");
            ObjectOutputStream oOutput = new ObjectOutputStream(fOutput);
            oOutput.writeObject(simulationFrame.sim.getSimulation());
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
           
        }
        simulationNameChooserDialog.setVisible(false);
    }//GEN-LAST:event_simulationNameFieldActionPerformed

    private void loadButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButton1ActionPerformed
        particle1ChooserDialog.setVisible(true);
        
    }//GEN-LAST:event_loadButton1ActionPerformed

    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
        particle1NameChooserDialog.setVisible(true);
    }//GEN-LAST:event_saveButton1ActionPerformed

    private void loadButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButton2ActionPerformed
        particle2ChooserDialog.setVisible(true);
    }//GEN-LAST:event_loadButton2ActionPerformed

    private void saveButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton2ActionPerformed
        particle2NameChooserDialog.setVisible(true);
    }//GEN-LAST:event_saveButton2ActionPerformed

    private void particle1ChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_particle1ChooserActionPerformed
        //handles the selection of a new particle file, and loads to the simulationFrame.sim.getSimulation()
        //assigns the file to a temporary selectedFile field
        File selectedFile = particle1Chooser.getSelectedFile();
        particle1ChooserDialog.setVisible(false);
        //reads the object from the file into the simulationFrame.sim.getSimulation() field
        //error handlers break from the code if an error is caught
        try {
            FileInputStream fInput = new FileInputStream(selectedFile);
            ObjectInputStream oInput = new ObjectInputStream(fInput);
            simulationFrame.sim.getSimulation().getParticles()[0] = (Particle)oInput.readObject();
            //update the fields
            this.chargeField1.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getCharge()));
            this.massField1.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getMass()));
            this.nameField1.setText(simulationFrame.sim.getSimulation().getParticles()[0].getName());
            this.radiusField1.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getRadius()));
            this.coordinateField1x.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getPosition().getX()));
            this.coordinateField1y.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[0].getPosition().getY()));

            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
            
            
        } catch (FileNotFoundException ex) {
            System.out.println("fileerror");
        } catch (IOException ex) {
            System.out.println("ioerror");
        } catch (ClassNotFoundException ex) {
            System.out.println("classerror");
        }
    }//GEN-LAST:event_particle1ChooserActionPerformed

    private void particle2ChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_particle2ChooserActionPerformed
        //handles the selection of a new particle file, and loads to the simulationFrame.sim.getSimulation()
        //assigns the file to a temporary selectedFile field
        File selectedFile = particle2Chooser.getSelectedFile();
        particle2ChooserDialog.setVisible(false);
        //reads the object from the file into the simulationFrame.sim.getSimulation() field
        //error handlers break from the code if an error is caught
        try {
            FileInputStream fInput = new FileInputStream(selectedFile);
            ObjectInputStream oInput = new ObjectInputStream(fInput);
            simulationFrame.sim.getSimulation().getParticles()[1] = (Particle)oInput.readObject();
            //update the fields
            this.chargeField2.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getCharge()));
            this.massField2.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getMass()));
            this.nameField2.setText(simulationFrame.sim.getSimulation().getParticles()[1].getName());
            this.radiusField2.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getRadius()));
            this.coordinateField2x.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getPosition().getX()));
            this.coordinateField2y.setText(Double.toString(simulationFrame.sim.getSimulation().getParticles()[1].getPosition().getY()));
            
            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
            
        } catch (ClassNotFoundException ex) {
            
        }
    }//GEN-LAST:event_particle2ChooserActionPerformed

    private void particle1NameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_particle1NameFieldActionPerformed
        try {
            FileOutputStream fOutput = new FileOutputStream(particle1NameField.getText() + ".par");
            ObjectOutputStream oOutput = new ObjectOutputStream(fOutput);
            oOutput.writeObject(simulationFrame.sim.getSimulation().getParticles()[0]);
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
           
        }
        particle1NameChooserDialog.setVisible(false);
    }//GEN-LAST:event_particle1NameFieldActionPerformed

    private void particle2NameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_particle2NameFieldActionPerformed
        try {
            FileOutputStream fOutput = new FileOutputStream(particle2NameField.getText() + ".par");
            ObjectOutputStream oOutput = new ObjectOutputStream(fOutput);
            oOutput.writeObject(simulationFrame.sim.getSimulation().getParticles()[1]);
        } catch (FileNotFoundException ex) {
            
        } catch (IOException ex) {
           
        }
        particle2NameChooserDialog.setVisible(false);
    }//GEN-LAST:event_particle2NameFieldActionPerformed

    private void coordinateField2yActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coordinateField2yActionPerformed
        try {
            simulationFrame.sim.getSimulation().getParticles()[1].getPosition().setY(Double.parseDouble(coordinateField2y.getText()));
            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        } catch (Exception e)
        {
            
        }
    }//GEN-LAST:event_coordinateField2yActionPerformed

    private void coordinateField1yActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coordinateField1yActionPerformed
        try {
            simulationFrame.sim.getSimulation().getParticles()[0].getPosition().setY(Double.parseDouble(coordinateField1y.getText()));
            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        } catch (Exception e)
        {
            
        }
    }//GEN-LAST:event_coordinateField1yActionPerformed

    private void coordinateField2yFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_coordinateField2yFocusLost
        try{
            simulationFrame.sim.getSimulation().getParticles()[1].getPosition().setY(Double.parseDouble(coordinateField2y.getText()));
            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        } catch (Exception e)
        {
            
        }
    }//GEN-LAST:event_coordinateField2yFocusLost

    private void coordinateField2xFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_coordinateField2xFocusLost
        try{
            simulationFrame.sim.getSimulation().getParticles()[1].getPosition().setX(Double.parseDouble(coordinateField2x.getText()));
            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        } catch (Exception e)
        {
            
        }
    }//GEN-LAST:event_coordinateField2xFocusLost

    private void coordinateField1yFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_coordinateField1yFocusLost
       try {
            simulationFrame.sim.getSimulation().getParticles()[0].getPosition().setY(Double.parseDouble(coordinateField1y.getText()));
            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
       } catch (Exception e)
       {
           
       }    
    }//GEN-LAST:event_coordinateField1yFocusLost

    private void coordinateField1xFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_coordinateField1xFocusLost
        try {
            simulationFrame.sim.getSimulation().getParticles()[0].getPosition().setX(Double.parseDouble(coordinateField1x.getText()));
            this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
        } catch (Exception e)
        {
            
        }    
    }//GEN-LAST:event_coordinateField1xFocusLost

    private void chargeField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chargeField1FocusLost
        
        simulationFrame.sim.getSimulation().getParticles()[0].setCharge(Double.parseDouble(chargeField1.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_chargeField1FocusLost

    private void massField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_massField1FocusLost
        
        simulationFrame.sim.getSimulation().getParticles()[0].setMass(Double.parseDouble(massField1.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_massField1FocusLost

    private void chargeField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_chargeField2FocusLost
        
        simulationFrame.sim.getSimulation().getParticles()[1].setCharge(Double.parseDouble(chargeField2.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_chargeField2FocusLost

    private void massField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_massField2FocusLost
        
        simulationFrame.sim.getSimulation().getParticles()[1].setMass(Double.parseDouble(massField2.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_massField2FocusLost

    private void radiusField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_radiusField2FocusLost
        
        simulationFrame.sim.getSimulation().getParticles()[1].setRadius(Double.parseDouble(radiusField2.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_radiusField2FocusLost

    private void radiusField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_radiusField1FocusLost
        
        simulationFrame.sim.getSimulation().getParticles()[0].setRadius(Double.parseDouble(radiusField1.getText()));
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_radiusField1FocusLost

    private void nameField1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameField1FocusLost
        
        simulationFrame.sim.getSimulation().getParticles()[0].setName(nameField1.getText());
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_nameField1FocusLost

    private void nameField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameField2FocusLost
        
        simulationFrame.sim.getSimulation().getParticles()[1].setName(nameField2.getText());
        this.simulationFrame.sim.paintComponent(simulationFrame.sim.getGraphics());
    }//GEN-LAST:event_nameField2FocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                InputFrame iFrame = new InputFrame();
                
                
                  
                
                
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chargeField1;
    private javax.swing.JTextField chargeField2;
    private javax.swing.JLabel chargeLabel1;
    private javax.swing.JLabel chargeLabel2;
    private javax.swing.JCheckBox conserveCheckBox;
    private javax.swing.JTextField coordinateField1x;
    private javax.swing.JTextField coordinateField1y;
    private javax.swing.JTextField coordinateField2x;
    private javax.swing.JTextField coordinateField2y;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton loadButton1;
    private javax.swing.JButton loadButton2;
    private javax.swing.JButton loadSimulationButton;
    private javax.swing.JTextField massField1;
    private javax.swing.JTextField massField2;
    private javax.swing.JLabel massLabel1;
    private javax.swing.JLabel massLabel2;
    private javax.swing.JTextField nameField1;
    private javax.swing.JTextField nameField2;
    private javax.swing.JLabel nameLabel1;
    private javax.swing.JLabel nameLabel2;
    private javax.swing.JFileChooser particle1Chooser;
    private javax.swing.JDialog particle1ChooserDialog;
    private javax.swing.JDialog particle1NameChooserDialog;
    private javax.swing.JTextField particle1NameField;
    private javax.swing.JLabel particle1NameLabel;
    private javax.swing.JFileChooser particle2Chooser;
    private javax.swing.JDialog particle2ChooserDialog;
    private javax.swing.JDialog particle2NameChooserDialog;
    private javax.swing.JTextField particle2NameField;
    private javax.swing.JLabel particle2NameLabel;
    private javax.swing.JToggleButton playButton;
    private javax.swing.JTextField radiusField1;
    private javax.swing.JTextField radiusField2;
    private javax.swing.JLabel radiusLabel1;
    private javax.swing.JLabel radiusLabel2;
    private javax.swing.JLabel runTImeLabel;
    private javax.swing.JTextField runTimeField;
    private javax.swing.JButton saveButton1;
    private javax.swing.JButton saveButton2;
    private javax.swing.JButton saveSimulationButton;
    private javax.swing.JFileChooser simulationChooser;
    private javax.swing.JDialog simulationChooserDialog;
    private javax.swing.JDialog simulationNameChooserDialog;
    private javax.swing.JTextField simulationNameField;
    private javax.swing.JLabel simulationNameLabel;
    private javax.swing.JLabel xLabel1;
    private javax.swing.JLabel xLabel2;
    private javax.swing.JLabel yLabel1;
    private javax.swing.JLabel yLabel2;
    // End of variables declaration//GEN-END:variables

}
